<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="NavigationButtonStyle" TargetType="RadioButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="72"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border x:Name="StateLayer" Background="Transparent"/>

                        <TextBlock
                            x:Name="Icon"
                            Foreground="{DynamicResource OnSurfaceVariantColourFullBrush}"
                            FontSize="24"
                            FontFamily="{StaticResource MaterialIconsOutlined}"
                            HorizontalAlignment="Center"
                            Text="{TemplateBinding Tag}"
                            Margin="0 12 0 0"/>

                        <TextBlock
                            x:Name="Content"
                            Foreground="{DynamicResource OnSurfaceVariantColourFullBrush}"
                            FontSize="12"
                            FontFamily="{StaticResource Roboto}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Margin="0 0 0 16"
                            Opacity="1"
                            Text="{TemplateBinding Content}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourPressedBrush}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" TargetName="Icon" Value="{DynamicResource PrimaryColourFullBrush}"/>
                            <Setter Property="Foreground" TargetName="Content" Value="{DynamicResource PrimaryColourFullBrush}"/>
                            <Setter Property="FontFamily" TargetName="Icon" Value="{StaticResource MaterialIconsFilled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TextButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="36"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="StateLayer" CornerRadius="4" Background="Transparent" HorizontalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                x:Name="Icon"
                                FontSize="18"
                                Foreground="{DynamicResource PrimaryColourFullBrush}"
                                FontFamily="{TemplateBinding FontFamily}"
                                Text="{TemplateBinding Tag}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Margin="16 0 8 0"/>

                            <TextBlock
                                x:Name="Content"
                                FontSize="14"
                                Foreground="{DynamicResource PrimaryColourFullBrush}"
                                FontFamily="{StaticResource Roboto}"
                                Text="{TemplateBinding Content}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Margin="0 0 24 0"/>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourHoverBrush}"/>
                        </Trigger>
                        
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourPressedBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="Icon" Value="{DynamicResource OnSurfaceColourDisabledBrush}"/>
                            <Setter Property="Foreground" TargetName="Content" Value="{DynamicResource OnSurfaceColourDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilledButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="36"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Container" CornerRadius="4" Background="{DynamicResource PrimaryColourFullBrush}" HorizontalAlignment="Center">
                        <Border x:Name="StateLayer" CornerRadius="4" Background="Transparent">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock
                                    x:Name="Icon"
                                    FontSize="18"
                                    Foreground="{DynamicResource OnPrimaryColourFullBrush}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Text="{TemplateBinding Tag}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="16 0 8 0"/>

                                <TextBlock
                                    x:Name="Content"
                                    FontSize="14"
                                    Foreground="{DynamicResource OnPrimaryColourFullBrush}"
                                    FontFamily="{StaticResource Roboto}"
                                    Text="{TemplateBinding Content}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="0 0 24 0"/>
                            </StackPanel>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnPrimaryColourHoverBrush}"/>
                        </Trigger>
                        
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnPrimaryColourHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnPrimaryColourPressedBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Container" Value="{DynamicResource OnSurfaceColourPressedBrush}"/>
                            <Setter Property="Foreground" TargetName="Icon" Value="{DynamicResource OnSurfaceColourDisabledBrush}"/>
                            <Setter Property="Foreground" TargetName="Content" Value="{DynamicResource OnSurfaceColourDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilledWarningButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="36"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Container" CornerRadius="4" Background="{DynamicResource ErrorColourFullBrush}" HorizontalAlignment="Center">
                        <Border x:Name="StateLayer" CornerRadius="4" Background="Transparent">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock
                                    x:Name="Icon"
                                    FontSize="18"
                                    Foreground="{DynamicResource OnErrorColourFullBrush}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Text="{TemplateBinding Tag}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="16 0 8 0"/>

                                <TextBlock
                                    x:Name="Content"
                                    FontSize="14"
                                    Foreground="{DynamicResource OnErrorColourFullBrush}"
                                    FontFamily="{StaticResource Roboto}"
                                    Text="{TemplateBinding Content}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="0 0 24 0"/>
                            </StackPanel>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnErrorColourHoverBrush}"/>
                        </Trigger>
                        
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnErrorColourHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnErrorColourPressedBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Container" Value="{DynamicResource OnSurfaceColourPressedBrush}"/>
                            <Setter Property="Foreground" TargetName="Icon" Value="{DynamicResource OnSurfaceColourDisabledBrush}"/>
                            <Setter Property="Foreground" TargetName="Content" Value="{DynamicResource OnSurfaceColourDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent" HorizontalAlignment="Center" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="IconBorder" Grid.Column="0"
                            Panel.ZIndex="1"
                            CornerRadius="1"
                            BorderThickness="2"
                            Height="14"
                            Width="14"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">
                            <TextBlock
                                x:Name="Icon"
                                FontSize="14"
                                Foreground="{DynamicResource OnPrimaryColourFullBrush}"
                                FontFamily="{StaticResource MaterialIconsFilled}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>
                        </Border>

                        <Ellipse x:Name="StateLayer" Grid.Column="0"
                            Height="32"
                            Width="32"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Fill="Transparent"/>

                        <TextBlock x:Name="Content" Grid.Column="2"
                            FontSize="12"
                            Foreground="{DynamicResource OnSurfaceColourFullBrush}"
                            FontFamily="{StaticResource Roboto}"
                            Text="{TemplateBinding Content}"
                            Margin="0 0 10 0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="BorderBrush" TargetName="IconBorder" Value="{DynamicResource OutlineColourFullBrush}"/>
                            <Setter Property="Background" TargetName="IconBorder" Value="Transparent"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" TargetName="IconBorder" Value="{DynamicResource PrimaryColourFullBrush}"/>
                            <Setter Property="Background" TargetName="IconBorder" Value="{DynamicResource PrimaryColourFullBrush}"/>
                            <Setter Property="Text" TargetName="Icon" Value="&#xe876;"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="StateLayer" Value="{DynamicResource PrimaryColourHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="StateLayer" Value="{DynamicResource PrimaryColourHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="StateLayer" Value="{DynamicResource PrimaryColourPressedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridEditButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        
        <Setter Property="ToolTipService.Placement" Value="Center"/>
        <Setter Property="ToolTipService.VerticalOffset" Value="40"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
        <Setter Property="ToolTipService.ShowDuration" Value="1500"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            x:Name="StateLayer"
                            Height="40" Width="40"
                            CornerRadius="4"
                            Background="Transparent"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <TextBlock
                                x:Name="Icon"
                                FontSize="22"
                                Foreground="{DynamicResource PrimaryColourFullBrush}"
                                FontFamily="{StaticResource MaterialIconsFilled}"
                                Text="&#xe3c9;"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourHoverBrush}"/>
                        </Trigger>
                        
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourPressedBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="Icon" Value="{DynamicResource OnSurfaceColourDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip
                    Content="Upravit"
                    Style="{StaticResource BasicTooltipStyle}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>

        <Setter Property="ToolTipService.Placement" Value="Center"/>
        <Setter Property="ToolTipService.VerticalOffset" Value="40"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
        <Setter Property="ToolTipService.ShowDuration" Value="1500"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            x:Name="StateLayer"
                            CornerRadius="4"
                            Background="Transparent"/>
                        <TextBlock
                            x:Name="Icon"
                            FontSize="20"
                            Foreground="{DynamicResource OnSurfaceColourFullBrush}"
                            FontFamily="{StaticResource MaterialIconsOutlined}"
                            Text="{TemplateBinding Content}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="Icon" Value="{DynamicResource OnSurfaceColourDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>

        <Setter Property="ToolTipService.Placement" Value="Center"/>
        <Setter Property="ToolTipService.VerticalOffset" Value="40"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
        <Setter Property="ToolTipService.ShowDuration" Value="2500"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border
                            x:Name="StateLayer"
                            CornerRadius="4"
                            Background="Transparent"/>
                        <TextBlock
                            x:Name="Icon"
                            FontSize="20"
                            Foreground="{DynamicResource OnSurfaceColourFullBrush}"
                            FontFamily="{StaticResource MaterialIconsOutlined}"
                            Text="{TemplateBinding Content}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource PrimaryColourPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="FontFamily" TargetName="Icon" Value="{StaticResource MaterialIconsFilled}"/>
                            <Setter Property="Foreground" TargetName="Icon" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RadioButton}, Path=Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="Icon" Value="{DynamicResource OnSurfaceColourDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="32"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="StateLayer"
                        CornerRadius="4"
                        BorderThickness="0"
                        BorderBrush="Transparent"
                        Background="Transparent"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">
                        <TextBlock
                            x:Name="Icon"
                            FontSize="18"
                            FontFamily="{StaticResource MaterialIconsOutlined}"
                            Foreground="{DynamicResource OnSurfaceVariantColourFullBrush}"
                            Text="&#xe5cd;"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourPressedBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="Icon" Value="{DynamicResource OnSurfaceColourDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkModeSwitchButton" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Width" Value="48"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="StateLayer" CornerRadius="24" Background="Transparent"/>

                        <TextBlock
                            x:Name="SunIcon"
                            FontSize="24"
                            FontFamily="{StaticResource MaterialIconsFilled}"
                            Foreground="{DynamicResource OnSurfaceVariantColourFullBrush}"
                            Text="&#xe518;"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                        <TextBlock
                            x:Name="MoonIcon"
                            FontSize="24"
                            FontFamily="{StaticResource MaterialIconsFilled}"
                            Foreground="{DynamicResource OnSurfaceVariantColourFullBrush}"
                            Text="&#xe51c;"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Padding="0 70 0 0"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="SunIcon"
                                            Storyboard.TargetProperty="Padding"
                                            To="0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="MoonIcon"
                                            Storyboard.TargetProperty="Padding"
                                            To="0 70 0 0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="SunIcon"
                                            Storyboard.TargetProperty="Padding"
                                            To="0 70 0 0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="MoonIcon"
                                            Storyboard.TargetProperty="Padding"
                                            To="0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingsNavigationButtonStyle" TargetType="RadioButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="56"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border
                            x:Name="StateLayer"
                            Grid.ColumnSpan="3"
                            Background="Transparent"/>

                        <Border
                            x:Name="SelectedState"
                            Grid.Column="0"
                            Width="6"
                            Background="Transparent"
                            HorizontalAlignment="Left"/>
                        
                        <TextBlock
                            x:Name="Icon"
                            Grid.Column="1"
                            FontSize="24"
                            Foreground="{DynamicResource OnSurfaceVariantColourFullBrush}"
                            FontFamily="{StaticResource MaterialIconsOutlined}"
                            Text="{TemplateBinding Tag}"
                            Margin="16 0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>

                        <TextBlock
                            x:Name="Header"
                            Grid.Column="2"
                            FontSize="14"
                            Foreground="{DynamicResource OnSurfaceVariantColourFullBrush}"
                            FontFamily="{StaticResource Roboto}"
                            Text="{TemplateBinding Content}"
                            Margin="0 0 16 0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourHoverBrush}"/>
                        </Trigger>
                        
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourHoverBrush}"/>
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourPressedBrush}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" TargetName="Icon" Value="{DynamicResource PrimaryColourFullBrush}"/>
                            <Setter Property="Foreground" TargetName="Header" Value="{DynamicResource PrimaryColourFullBrush}"/>
                            <Setter Property="FontFamily" TargetName="Icon" Value="{StaticResource MaterialIconsFilled}"/>
                            <Setter Property="Background" TargetName="SelectedState" Value="{DynamicResource PrimaryColourFullBrush}"/>
                            <Setter Property="Background" TargetName="StateLayer" Value="{DynamicResource OnSurfaceColourHoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>