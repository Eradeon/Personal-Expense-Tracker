<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:services="clr-namespace:Personal_Expense_Tracker.Service">

    <services:StringEmptyToBooleanConverter x:Key="StringEmptyToBooleanConverter"/>

    <!--#region Modal-->
    <Style x:Key="ModalCoverStyle" TargetType="Grid">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Panel.ZIndex" Value="10"/>
        <Setter Property="Background" Value="{StaticResource ModalCoverBrush}"/>
    </Style>

    <Style x:Key="ModalWrapperStyle" TargetType="Border">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="28"/>
        <Setter Property="Background" Value="{StaticResource ModalBackgroundBrush}"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20" ShadowDepth="5" Direction="270" Color="{StaticResource ShadowColour}" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModalWrapperDarkStyle" TargetType="Border">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="28"/>
        <Setter Property="Background" Value="{StaticResource ModalBackgroundDarkBrush}"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20" ShadowDepth="5" Direction="270" Color="{StaticResource ShadowColour}" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModalContentStyle" TargetType="Grid">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Margin" Value="24 24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="280"/>
        <Setter Property="MaxWidth" Value="840"/>
    </Style>

    <Style x:Key="ModalSurfaceStyle" TargetType="Border">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="24 24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="14"/>
        <Setter Property="Background" Value="{StaticResource ComboBoxItemSurfaceBrush}"/>
    </Style>

    <Style x:Key="ModalHeadlineStyle" TargetType="TextBlock">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="LineHeight" Value="32"/>
        <Setter Property="Foreground" Value="{StaticResource ModalHeadlineBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ModalSubtitleStyle" TargetType="TextBlock">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="LineHeight" Value="28"/>
        <Setter Property="Foreground" Value="{StaticResource ModalHeadlineBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 0 8"/>
    </Style>

    <Style x:Key="ModalSubtitleSmallStyle" TargetType="TextBlock">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="LineHeight" Value="24"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{StaticResource ModalHeadlineBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 0 8"/>
    </Style>

    <Style x:Key="ModalSupportingTextStyle" TargetType="TextBlock">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{StaticResource ModalSupportingTextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--#endregion Modal-->

    <Style x:Key="DatabaseNameLabelStyle" TargetType="Label">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0 0 14 0">
                        <TextBlock
                            FontSize="12"
                            LineHeight="16"
                            Foreground="{StaticResource TextBoxInactiveOutlineBrush}"
                            FontFamily="{StaticResource Roboto}"
                            Text="{TemplateBinding Tag}"
                            Padding="14 5 5 0"/>
                        <TextBlock
                            FontSize="12"
                            LineHeight="16"
                            Foreground="{StaticResource TextBoxInactiveOutlineBrush}"
                            FontFamily="{StaticResource Roboto}"
                            Text="{TemplateBinding Content}"
                            Padding="0 5 0 0"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region Buttons-->
    <Style x:Key="TextButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="36"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="StateLayer" CornerRadius="4" Background="Transparent" HorizontalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                x:Name="Icon"
                                Grid.Column="0"
                                FontSize="18"
                                Foreground="{StaticResource TextButtonLabelBrush}"
                                FontFamily="{TemplateBinding FontFamily}"
                                Text="{TemplateBinding Tag}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Margin="16 0 8 0"/>

                            <TextBlock
                                x:Name="Content"
                                Grid.Column="1"
                                FontSize="14"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource TextButtonLabelBrush}"
                                FontFamily="{StaticResource Roboto}"
                                Text="{TemplateBinding Content}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Margin="0 0 24 0"/>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{StaticResource TextButtonHoverStateBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{StaticResource TextButtonPressedStateBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource TextButtonDisabledLabelBrush}"/>
                            <Setter Property="Foreground" TargetName="Content" Value="{StaticResource TextButtonDisabledLabelBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilledButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="36"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Container" CornerRadius="4" Background="{StaticResource FilledButtonContainerBrush}" HorizontalAlignment="Center">
                        <Border x:Name="StateLayer" CornerRadius="4" Background="Transparent">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock
                                    x:Name="Icon"
                                    Grid.Column="0"
                                    FontSize="18"
                                    Foreground="{StaticResource FilledButonLabelBrush}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Text="{TemplateBinding Tag}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="16 0 8 0"/>

                                <TextBlock
                                    x:Name="Content"
                                    Grid.Column="1"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{StaticResource FilledButonLabelBrush}"
                                    FontFamily="{StaticResource Roboto}"
                                    Text="{TemplateBinding Content}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="0 0 24 0"/>
                            </StackPanel>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{StaticResource FilledButtonHoverStateBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{StaticResource FilledButtonPressedStateBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Container" Value="{StaticResource FilledButtonDisabledContainerBrush}"/>
                            <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource FilledButonDisabledLabelBrush}"/>
                            <Setter Property="Foreground" TargetName="Content" Value="{StaticResource FilledButonDisabledLabelBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilledWarningButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="36"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Container" CornerRadius="4" Background="{StaticResource FilledWarningButtonContainerBrush}" HorizontalAlignment="Center">
                        <Border x:Name="StateLayer" CornerRadius="4" Background="Transparent">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock
                                    x:Name="Icon"
                                    Grid.Column="0"
                                    FontSize="18"
                                    Foreground="{StaticResource FilledWarningButonLabelBrush}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Text="{TemplateBinding Tag}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="16 0 8 0"/>

                                <TextBlock
                                    x:Name="Content"
                                    Grid.Column="1"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{StaticResource FilledWarningButonLabelBrush}"
                                    FontFamily="{StaticResource Roboto}"
                                    Text="{TemplateBinding Content}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="0 0 24 0"/>
                            </StackPanel>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{StaticResource FilledWarningButtonHoverStateBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{StaticResource FilledWarningButtonPressedStateBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Container" Value="{StaticResource FilledWarningButtonDisabledContainerBrush}"/>
                            <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource FilledWarningButonDisabledLabelBrush}"/>
                            <Setter Property="Foreground" TargetName="Content" Value="{StaticResource FilledWarningButonDisabledLabelBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Buttons-->

    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent" HorizontalAlignment="Center" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <Border x:Name="IconBorder" Grid.Column="0"
                            Panel.ZIndex="1"
                            CornerRadius="1"
                            BorderThickness="2"
                            Height="14"
                            Width="14"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">
                            <TextBlock
                                x:Name="Icon"
                                FontSize="14"
                                Foreground="{StaticResource CheckboxIconBrush}"
                                FontFamily="{StaticResource MaterialIconsFilled}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>
                        </Border>

                        <Ellipse x:Name="StateLayer" Grid.Column="0"
                            Height="32"
                            Width="32"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Fill="Transparent"/>

                        <TextBlock x:Name="Content" Grid.Column="2"
                            FontSize="12"
                            Foreground="{StaticResource CheckboxLabelBrush}"
                            FontFamily="{StaticResource Roboto}"
                            Text="{TemplateBinding Content}"
                            Margin="0 0 10 0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>  
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="BorderBrush" TargetName="IconBorder" Value="{StaticResource CheckboxOutlineBrush}"/>
                            <Setter Property="Background" TargetName="IconBorder" Value="Transparent"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" TargetName="IconBorder" Value="{StaticResource CheckboxCheckedContainerBrush}"/>
                            <Setter Property="Background" TargetName="IconBorder" Value="{StaticResource CheckboxCheckedContainerBrush}"/>
                            <Setter Property="Text" TargetName="Icon" Value="&#xe876;"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="StateLayer" Value="{StaticResource CheckboxHoverStateBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="StateLayer" Value="{StaticResource CheckboxPressedStateBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region ComboBox-->
    <!--ComboBox Toggle Button Style-->
    <ControlTemplate x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
        <Grid Height="48" Margin="15 0 15 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="46"/>
            </Grid.ColumnDefinitions>
            
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                Background="{StaticResource ComboBoxToggleButtonSurfaceBrush}"
                BorderThickness="0 0 0 1"
                BorderBrush="{StaticResource ComboBoxToggleButtonInactiveOutlineBrush}"
                CornerRadius="4 4 0 0">
                <Border x:Name="StateLayer" Background="Transparent" CornerRadius="4 4 0 0"/>
            </Border>

            <TextBlock
                x:Name="Tag"
                Grid.Column="0"
                FontFamily="{StaticResource Roboto}"
                FontSize="10"
                Foreground="{StaticResource ComboBoxToggleButtonInactiveOutlineBrush}"
                Padding="16 6 0 0"
                Text="{TemplateBinding Tag}"/>

            <TextBlock
                x:Name="Icon"
                Grid.Column="1"
                FontFamily="{StaticResource MaterialIconsFilled}"
                FontSize="18"
                Text="&#xe5c5;"
                Foreground="{StaticResource ComboBoxToggleButtonInactiveOutlineBrush}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="0" CenterX="9" CenterY="9"/>
                </TextBlock.RenderTransform>
            </TextBlock>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="StateLayer" Value="{StaticResource ComboBoxToggleButtonStateBrush}"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderThickness" TargetName="Border" Value="0 0 0 2"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ComboBoxToggleButtonActiveOutlineBrush}"/>
                <Setter Property="Background" TargetName="StateLayer" Value="{StaticResource ComboBoxToggleButtonStateBrush}"/>
                <Setter Property="Foreground" TargetName="Tag" Value="{StaticResource ComboBoxToggleButtonActiveOutlineBrush}"/>
                <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource ComboBoxToggleButtonActiveOutlineBrush}"/>

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Icon"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                From="0"
                                To="180"
                                Duration="00:00:00.15"
                                BeginTime="00:00:00"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Icon"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                From="180"
                                To="0"
                                Duration="00:00:00.15"
                                BeginTime="00:00:00"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource ComboBoxToggleButtonDisabledSurfaceBrush}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ComboBoxToggleButtonDisabledOutlineBrush}"/>
                <Setter Property="Foreground" TargetName="Tag" Value="{StaticResource ComboBoxToggleButtonDisabledOutlineBrush}"/>
                <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource ComboBoxToggleButtonDisabledOutlineBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ComboBox Selected Item Style-->
    <Style x:Key="ComboBoxSelectedItemStyle" TargetType="ContentPresenter">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextBlock.FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="TextBlock.FontSize" Value="16"/>
        <Setter Property="TextBlock.Foreground" Value="{StaticResource ComboBoxToggleButtonContentBrush}"/>
        <Setter Property="TextBlock.Margin" Value="31 16 16 0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextBlock.Foreground" Value="{StaticResource ComboBoxToggleButtonDisabledOutlineBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ComboBox Item Style-->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="48"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{StaticResource ComboBoxItemSurfaceBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="16"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="8"/>
                        </Grid.RowDefinitions>

                        <Border Grid.ColumnSpan="3" Grid.RowSpan="3"
                            x:Name="StateLayer"
                            Background="Transparent"/>

                        <ContentPresenter Grid.Column="1" Grid.Row="1"
                            TextBlock.FontFamily="{StaticResource Roboto}"
                            TextBlock.FontSize="14"
                            TextBlock.Foreground="{StaticResource ComboBoxItemContentBrush}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="StateLayer" Value="{StaticResource ComboBoxItemHoverStateBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--ComboBox Style-->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Height" Value="48"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            x:Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButtonStyle}"
                            Focusable="False"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"
                            Tag="{TemplateBinding Tag}"/>

                        <ContentPresenter
                            x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Style="{StaticResource ComboBoxSelectedItemStyle}"/>

                        <Popup
                            x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid
                                x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                Background="Transparent"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="Transparent" Margin="15 0 15 15">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="12"  ShadowDepth="2" Direction="270" Color="{StaticResource ShadowColour}" Opacity="0.5"/>
                                    </Border.Effect>

                                    <ScrollViewer SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto">
                                        <StackPanel
                                            IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ComboBox-->
    
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxInputBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="Transparent"
                            BorderThickness="1"
                            BorderBrush="{StaticResource TextBoxInactiveOutlineBrush}"
                            CornerRadius="4"
                            MinWidth="100"
                            Padding="11 15 11 0">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock
                            x:Name="Tag"
                            Foreground="{StaticResource TextBoxInactiveOutlineBrush}"
                            FontSize="14"
                            Padding="14 16 14 0"
                            Text="{TemplateBinding Tag}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource TextBoxHoverOutlineBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource TextBoxActiveOutlineBrush}"/>
                            <Setter Property="Foreground" TargetName="Tag" Value="{StaticResource TextBoxActiveOutlineBrush}"/>

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="BorderThickness"
                                            From="1"
                                            To="2"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Padding"
                                            From="11 15 11 0"
                                            To="10 14 10 0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="BorderThickness"
                                            From="2"
                                            To="1"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Padding"
                                            From="10 14 10 0"
                                            To="11 15 11 0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringEmptyToBooleanConverter}}" Value="True"/>
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="EmptyNotFocusedEnter"/>
                                <StopStoryboard BeginStoryboardName="EmptyFocusedExit"/>
                                <BeginStoryboard x:Name="EmptyFocusedEnter">
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Tag"
                                            Storyboard.TargetProperty="Padding"
                                            From="14 16 14 0"
                                            To="14 5 14 0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Tag"
                                            Storyboard.TargetProperty="FontSize"
                                            From="14"
                                            To="10"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>

                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="EmptyFocusedEnter"/>
                                <BeginStoryboard x:Name="EmptyFocusedExit">
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Tag"
                                            Storyboard.TargetProperty="Padding"
                                            To="14 16 14 0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Tag"
                                            Storyboard.TargetProperty="FontSize"
                                            To="14"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringEmptyToBooleanConverter}}" Value="False"/>
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="EmptyFocusedEnter"/>
                                <StopStoryboard BeginStoryboardName="EmptyFocusedExit"/>

                                <BeginStoryboard x:Name="NotEmptyFocusedEnter">
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Tag"
                                            Storyboard.TargetProperty="Padding"
                                            To="14 5 14 0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Tag"
                                            Storyboard.TargetProperty="FontSize"
                                            To="10"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringEmptyToBooleanConverter}}" Value="False"/>
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>

                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="NotEmptyFocusedEnter"/>
                                <BeginStoryboard x:Name="NotEmptyNotFocusedBegin">
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Tag"
                                            Storyboard.TargetProperty="Padding"
                                            To="14 5 14 0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Tag"
                                            Storyboard.TargetProperty="FontSize"
                                            To="10"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringEmptyToBooleanConverter}}" Value="True"/>
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>

                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="EmptyFocusedEnter"/>
                                <StopStoryboard BeginStoryboardName="EmptyFocusedExit"/>
                                <StopStoryboard BeginStoryboardName="NotEmptyFocusedEnter"/>
                                <StopStoryboard BeginStoryboardName="NotEmptyNotFocusedBegin"/>

                                <BeginStoryboard x:Name="EmptyNotFocusedEnter">
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Tag"
                                            Storyboard.TargetProperty="Padding"
                                            To="14 16 14 0"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Tag"
                                            Storyboard.TargetProperty="FontSize"
                                            To="14"
                                            Duration="00:00:00.15"
                                            BeginTime="00:00:00"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>